on: pull_request
name: Test
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout code"
      uses: actions/checkout@v2
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: "Restore golang bin cache"
      id: go-bin-cache
      uses: actions/cache@v2
      with:
        path: ~/go/bin
        key: ${{ runner.os }}-go-bin-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-bin-
    - name: "Restore golang mod cache"
      uses: actions/cache@v2
      with:
        path: |
          ~/Library/Caches/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-
    - name: "Install dependencies"
      if: steps.go-bin-cache.outputs.cache-hit != 'true'
      run: make dependencies
      shell: bash
    - name: "Download latest app config"
      run: |
        make config
    - name: "Run go mod tidy"
      run: make tidy
    - name: "Run go fmt"
      run: make fmt
    - name: "Run go vet"
      run: make vet
      shell: bash
    - name: "Static analysis check"
      run: make staticcheck
      shell: bash
    - name: "Linting"
      run: make lint
      shell: bash
    - name: "Security audit"
      run:  make gosec
      shell: bash
  test:
    strategy:
      matrix:
        go-version: [1.16.x]
        node-version: [12]
        rust-toolchain: [1.54.0]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: "Checkout code"
      uses: actions/checkout@v2
    - name: "Install Go"
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: "Restore golang bin cache"
      uses: actions/cache@v2
      with:
        path: ~/go/bin
        key: ${{ runner.os }}-go-bin-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-bin-
    - name: "Restore golang mod cache"
      uses: actions/cache@v2
      with:
        path: |
          ~/Library/Caches/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-
    - name: "Install Rust"
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-toolchain }}
    - name: "Add wasm32-wasi Rust target"
      run: rustup target add wasm32-wasi --toolchain ${{ matrix.rust-toolchain }}
    - name: "Restore cargo cache"
      uses: actions/cache@v2
      with:
        path: |
          ~/.rustup/
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: "Install Node"
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: "Download latest app config"
      run: |
        make config
    - name: "Test suite"
      run: make test
      shell: bash
      env:
        TEST_COMPUTE_INIT: true
        TEST_COMPUTE_BUILD: true
