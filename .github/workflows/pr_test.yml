on: pull_request
name: Test
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.14.x
    - name: Restore cache
      id: cache
      uses: actions/cache@v1
      with:
        path: ~/go/bin
        key: ${{ runner.os }}-go-bin-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-bin-
    - name: Restore cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: make dependencies
      shell: bash
    - name: Mod Tidy
      run: make tidy
    - name: Fmt
      run: make fmt
    - name: Vet
      run: make vet
      shell: bash
    - name: Staticcheck
      run: make staticcheck
      shell: bash
    - name: Lint
      run: make lint
      shell: bash
    - name: Gosec
      run:  make gosec
      shell: bash
  test:
    strategy:
      matrix:
        go-version: [1.14.x]
        node-version: [12]
        rust-toolchain: [1.46.0]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Restore cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-toolchain }}
    - name: Add wasm32-wasi Rust target
      run: rustup target add wasm32-wasi --toolchain ${{ matrix.rust-toolchain }}
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Test
      run: make test
      shell: bash
      env:
        TEST_COMPUTE_INIT: true
        TEST_COMPUTE_BUILD: true
