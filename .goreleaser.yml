project_name: fastly
release:
  draft: true
  prerelease: auto
  extra_files:
    - glob: "dist/usage.json"
before:
  hooks:
    - go mod tidy
    - go mod download
builds:
  - <<: &build_defaults
      main: ./cmd/fastly
      ldflags:
        - -s -w -X "github.com/fastly/cli/pkg/revision.AppVersion={{ .Version }}"
        - -X "github.com/fastly/cli/pkg/revision.GitCommit={{ .ShortCommit }}"
        - -X "github.com/fastly/cli/pkg/revision.GoVersion={{ .Env.GOVERSION }}"
    id: macos
    goos: [darwin]
    goarch: [amd64, arm64]
  - <<: *build_defaults
    id: linux
    goos: [linux]
    goarch: [386, amd64, arm64]
  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: [386, amd64, arm64]
  - <<: *build_defaults
    id: generate-usage
    goos: [linux]
    goarch: [amd64]
    binary: 'fastly-usage' # we rename the binary to prevent an error caused by the earlier 'linux/amd64' step
                           # which already creates a 'fastly' binary in '/usr/local/bin'.
    hooks:
      post:
        - cmd: "scripts/documentation.sh {{ .Path }}"
archives:
  - id: nix
    builds: [macos, linux]
    <<: &archive_defaults
      name_template: "{{ .ProjectName }}_v{{ .Version }}_{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
      files:
        - none*
    wrap_in_directory: false
    format: tar.gz
  - id: windows
    builds: [windows]
    <<: *archive_defaults
    wrap_in_directory: false
    format: zip
brews:
  - name: fastly
    ids: [nix]
    tap:
      owner: fastly
      name: homebrew-tap
    skip_upload: auto
    description: Fastly CLI
    homepage: https://github.com/fastly/cli
    folder: Formula
    custom_block: |
      head do
        url "https://github.com/fastly/cli.git"
        depends_on "go"
      end
    install: |
      system "make" if build.head?
      bin.install "fastly"
      (bash_completion/"fastly.sh").write `#{bin}/fastly --completion-script-bash`
      (zsh_completion/"_fastly").write `#{bin}/fastly --completion-script-zsh`
    test: |
      help_text = shell_output("#{bin}/fastly --help")
      assert_includes help_text, "Usage:"
nfpms:
  - license: Apache 2.0
    maintainer: Fastly
    homepage: https://github.com/fastly/cli
    bindir: /usr/local/bin
    formats:
      - deb
      - rpm
scoop:
  bucket:
    owner: fastly
    name: scoop-cli
  homepage: https://github.com/fastly/cli
  skip_upload: auto
  description: Fastly CLI
  license: Apache 2.0
checksum:
  name_template: "{{ .ProjectName }}_v{{ .Version }}_SHA256SUMS"
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  skip: true
# dockers:
# - <<: &build_opts
#     use: buildx
#     goos: linux
#     goarch: amd64
#     image_templates:
#       - "ghcr.io/fastly/cli:{{ .Version }}"
#     build_flag_templates:
#       - "--platform=linux/amd64"
#       - --label=title={{ .ProjectName }}
#       - --label=description={{ .ProjectName }}
#       - --label=url=https://github.com/fastly/cli
#       - --label=source=https://github.com/fastly/cli
#       - --label=version={{ .Version }}
#       - --label=created={{ time "2006-01-02T15:04:05Z07:00" }}
#       - --label=revision={{ .FullCommit }}
#       - --label=licenses=Apache-2.0
#   dockerfile: Dockerfile-assemblyscript
# - <<: *build_opts
#   dockerfile: Dockerfile-rust
