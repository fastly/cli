# docker build -t fastly/cli/rust . -f ./Dockerfile-rust
# docker run -it fastly/cli/rust

FROM rust:latest

COPY --from=fastly/cli /usr/bin/fastly /usr/bin/fastly

# How do we incorporate the dynamic config constraint?
# i.e. `r.config.File.Language.Rust.RustupConstraint`
#
# NOTE: This isn't a problem right now because:
# rustup_constraint = ">= 1.23.0"
# So by virtue of using `FROM rust:latest` we should satisfy the constraint.

# TODO: curl the dynamic config endpoint and acquire the relevant values needed.
RUN rustup toolchain install 1.49.0
RUN rustup target add wasm32-wasi --toolchain 1.49.0

# NOTE: I don't believe we need to worry about fastly-sys constraint because
# that only happens on `compute build` and is dependant on a Cargo.toml file
# which is only present after running `compute init`. I don't think the
# container image should contain that file. The container image should only
# install the CLI and configure any foundational Rust dependencies.

WORKDIR /app
ENTRYPOINT ["/usr/bin/fastly"]
CMD ["--help"]
